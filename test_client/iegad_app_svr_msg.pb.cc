// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iegad_app_svr_msg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "iegad_app_svr_msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* setup_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  setup_msg_reflection_ = NULL;
const ::google::protobuf::Descriptor* up_usrinfo_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  up_usrinfo_msg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_iegad_5fapp_5fsvr_5fmsg_2eproto() {
  protobuf_AddDesc_iegad_5fapp_5fsvr_5fmsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "iegad_app_svr_msg.proto");
  GOOGLE_CHECK(file != NULL);
  setup_msg_descriptor_ = file->message_type(0);
  static const int setup_msg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(setup_msg, log_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(setup_msg, pwd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(setup_msg, email_),
  };
  setup_msg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      setup_msg_descriptor_,
      setup_msg::default_instance_,
      setup_msg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(setup_msg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(setup_msg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(setup_msg));
  up_usrinfo_msg_descriptor_ = file->message_type(1);
  static const int up_usrinfo_msg_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(up_usrinfo_msg, log_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(up_usrinfo_msg, nick_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(up_usrinfo_msg, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(up_usrinfo_msg, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(up_usrinfo_msg, birth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(up_usrinfo_msg, hometown_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(up_usrinfo_msg, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(up_usrinfo_msg, blood_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(up_usrinfo_msg, tel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(up_usrinfo_msg, job_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(up_usrinfo_msg, school_),
  };
  up_usrinfo_msg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      up_usrinfo_msg_descriptor_,
      up_usrinfo_msg::default_instance_,
      up_usrinfo_msg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(up_usrinfo_msg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(up_usrinfo_msg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(up_usrinfo_msg));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_iegad_5fapp_5fsvr_5fmsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    setup_msg_descriptor_, &setup_msg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    up_usrinfo_msg_descriptor_, &up_usrinfo_msg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_iegad_5fapp_5fsvr_5fmsg_2eproto() {
  delete setup_msg::default_instance_;
  delete setup_msg_reflection_;
  delete up_usrinfo_msg::default_instance_;
  delete up_usrinfo_msg_reflection_;
}

void protobuf_AddDesc_iegad_5fapp_5fsvr_5fmsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027iegad_app_svr_msg.proto\"7\n\tsetup_msg\022\016"
    "\n\006log_id\030\001 \002(\t\022\013\n\003pwd\030\002 \002(\t\022\r\n\005email\030\003 \002"
    "(\t\"\272\001\n\016up_usrinfo_msg\022\016\n\006log_id\030\001 \002(\t\022\021\n"
    "\tnick_name\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\013\n\003sex\030\004 "
    "\001(\t\022\r\n\005birth\030\005 \001(\t\022\020\n\010hometown\030\006 \001(\t\022\020\n\010"
    "location\030\007 \001(\t\022\r\n\005blood\030\010 \001(\t\022\013\n\003tel\030\t \001"
    "(\t\022\013\n\003job\030\n \001(\005\022\016\n\006school\030\013 \001(\t", 271);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "iegad_app_svr_msg.proto", &protobuf_RegisterTypes);
  setup_msg::default_instance_ = new setup_msg();
  up_usrinfo_msg::default_instance_ = new up_usrinfo_msg();
  setup_msg::default_instance_->InitAsDefaultInstance();
  up_usrinfo_msg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_iegad_5fapp_5fsvr_5fmsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_iegad_5fapp_5fsvr_5fmsg_2eproto {
  StaticDescriptorInitializer_iegad_5fapp_5fsvr_5fmsg_2eproto() {
    protobuf_AddDesc_iegad_5fapp_5fsvr_5fmsg_2eproto();
  }
} static_descriptor_initializer_iegad_5fapp_5fsvr_5fmsg_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int setup_msg::kLogIdFieldNumber;
const int setup_msg::kPwdFieldNumber;
const int setup_msg::kEmailFieldNumber;
#endif  // !_MSC_VER

setup_msg::setup_msg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:setup_msg)
}

void setup_msg::InitAsDefaultInstance() {
}

setup_msg::setup_msg(const setup_msg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:setup_msg)
}

void setup_msg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  log_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

setup_msg::~setup_msg() {
  // @@protoc_insertion_point(destructor:setup_msg)
  SharedDtor();
}

void setup_msg::SharedDtor() {
  if (log_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete log_id_;
  }
  if (pwd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pwd_;
  }
  if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete email_;
  }
  if (this != default_instance_) {
  }
}

void setup_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* setup_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return setup_msg_descriptor_;
}

const setup_msg& setup_msg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_iegad_5fapp_5fsvr_5fmsg_2eproto();
  return *default_instance_;
}

setup_msg* setup_msg::default_instance_ = NULL;

setup_msg* setup_msg::New() const {
  return new setup_msg;
}

void setup_msg::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_log_id()) {
      if (log_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        log_id_->clear();
      }
    }
    if (has_pwd()) {
      if (pwd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        pwd_->clear();
      }
    }
    if (has_email()) {
      if (email_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        email_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool setup_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:setup_msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string log_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->log_id().data(), this->log_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "log_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pwd;
        break;
      }

      // required string pwd = 2;
      case 2: {
        if (tag == 18) {
         parse_pwd:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pwd()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pwd().data(), this->pwd().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pwd");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_email;
        break;
      }

      // required string email = 3;
      case 3: {
        if (tag == 26) {
         parse_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "email");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:setup_msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:setup_msg)
  return false;
#undef DO_
}

void setup_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:setup_msg)
  // required string log_id = 1;
  if (has_log_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->log_id().data(), this->log_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "log_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->log_id(), output);
  }

  // required string pwd = 2;
  if (has_pwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pwd().data(), this->pwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pwd(), output);
  }

  // required string email = 3;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->email(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:setup_msg)
}

::google::protobuf::uint8* setup_msg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:setup_msg)
  // required string log_id = 1;
  if (has_log_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->log_id().data(), this->log_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "log_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->log_id(), target);
  }

  // required string pwd = 2;
  if (has_pwd()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pwd().data(), this->pwd().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pwd(), target);
  }

  // required string email = 3;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->email(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:setup_msg)
  return target;
}

int setup_msg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string log_id = 1;
    if (has_log_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->log_id());
    }

    // required string pwd = 2;
    if (has_pwd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pwd());
    }

    // required string email = 3;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void setup_msg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const setup_msg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const setup_msg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void setup_msg::MergeFrom(const setup_msg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_log_id()) {
      set_log_id(from.log_id());
    }
    if (from.has_pwd()) {
      set_pwd(from.pwd());
    }
    if (from.has_email()) {
      set_email(from.email());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void setup_msg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void setup_msg::CopyFrom(const setup_msg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool setup_msg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void setup_msg::Swap(setup_msg* other) {
  if (other != this) {
    std::swap(log_id_, other->log_id_);
    std::swap(pwd_, other->pwd_);
    std::swap(email_, other->email_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata setup_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = setup_msg_descriptor_;
  metadata.reflection = setup_msg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int up_usrinfo_msg::kLogIdFieldNumber;
const int up_usrinfo_msg::kNickNameFieldNumber;
const int up_usrinfo_msg::kNameFieldNumber;
const int up_usrinfo_msg::kSexFieldNumber;
const int up_usrinfo_msg::kBirthFieldNumber;
const int up_usrinfo_msg::kHometownFieldNumber;
const int up_usrinfo_msg::kLocationFieldNumber;
const int up_usrinfo_msg::kBloodFieldNumber;
const int up_usrinfo_msg::kTelFieldNumber;
const int up_usrinfo_msg::kJobFieldNumber;
const int up_usrinfo_msg::kSchoolFieldNumber;
#endif  // !_MSC_VER

up_usrinfo_msg::up_usrinfo_msg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:up_usrinfo_msg)
}

void up_usrinfo_msg::InitAsDefaultInstance() {
}

up_usrinfo_msg::up_usrinfo_msg(const up_usrinfo_msg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:up_usrinfo_msg)
}

void up_usrinfo_msg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  log_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nick_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sex_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birth_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hometown_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blood_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tel_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_ = 0;
  school_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

up_usrinfo_msg::~up_usrinfo_msg() {
  // @@protoc_insertion_point(destructor:up_usrinfo_msg)
  SharedDtor();
}

void up_usrinfo_msg::SharedDtor() {
  if (log_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete log_id_;
  }
  if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nick_name_;
  }
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (sex_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete sex_;
  }
  if (birth_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete birth_;
  }
  if (hometown_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete hometown_;
  }
  if (location_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete location_;
  }
  if (blood_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete blood_;
  }
  if (tel_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tel_;
  }
  if (school_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete school_;
  }
  if (this != default_instance_) {
  }
}

void up_usrinfo_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* up_usrinfo_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return up_usrinfo_msg_descriptor_;
}

const up_usrinfo_msg& up_usrinfo_msg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_iegad_5fapp_5fsvr_5fmsg_2eproto();
  return *default_instance_;
}

up_usrinfo_msg* up_usrinfo_msg::default_instance_ = NULL;

up_usrinfo_msg* up_usrinfo_msg::New() const {
  return new up_usrinfo_msg;
}

void up_usrinfo_msg::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    if (has_log_id()) {
      if (log_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        log_id_->clear();
      }
    }
    if (has_nick_name()) {
      if (nick_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        nick_name_->clear();
      }
    }
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_sex()) {
      if (sex_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        sex_->clear();
      }
    }
    if (has_birth()) {
      if (birth_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        birth_->clear();
      }
    }
    if (has_hometown()) {
      if (hometown_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        hometown_->clear();
      }
    }
    if (has_location()) {
      if (location_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        location_->clear();
      }
    }
    if (has_blood()) {
      if (blood_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        blood_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 1792) {
    if (has_tel()) {
      if (tel_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        tel_->clear();
      }
    }
    job_ = 0;
    if (has_school()) {
      if (school_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        school_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool up_usrinfo_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:up_usrinfo_msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string log_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->log_id().data(), this->log_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "log_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_nick_name;
        break;
      }

      // optional string nick_name = 2;
      case 2: {
        if (tag == 18) {
         parse_nick_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nick_name().data(), this->nick_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "nick_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sex;
        break;
      }

      // optional string sex = 4;
      case 4: {
        if (tag == 34) {
         parse_sex:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sex()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sex().data(), this->sex().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sex");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_birth;
        break;
      }

      // optional string birth = 5;
      case 5: {
        if (tag == 42) {
         parse_birth:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_birth()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->birth().data(), this->birth().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "birth");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_hometown;
        break;
      }

      // optional string hometown = 6;
      case 6: {
        if (tag == 50) {
         parse_hometown:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hometown()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hometown().data(), this->hometown().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hometown");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_location;
        break;
      }

      // optional string location = 7;
      case 7: {
        if (tag == 58) {
         parse_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->location().data(), this->location().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "location");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_blood;
        break;
      }

      // optional string blood = 8;
      case 8: {
        if (tag == 66) {
         parse_blood:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_blood()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->blood().data(), this->blood().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "blood");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_tel;
        break;
      }

      // optional string tel = 9;
      case 9: {
        if (tag == 74) {
         parse_tel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tel()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tel().data(), this->tel().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "tel");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_job;
        break;
      }

      // optional int32 job = 10;
      case 10: {
        if (tag == 80) {
         parse_job:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &job_)));
          set_has_job();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_school;
        break;
      }

      // optional string school = 11;
      case 11: {
        if (tag == 90) {
         parse_school:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_school()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->school().data(), this->school().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "school");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:up_usrinfo_msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:up_usrinfo_msg)
  return false;
#undef DO_
}

void up_usrinfo_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:up_usrinfo_msg)
  // required string log_id = 1;
  if (has_log_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->log_id().data(), this->log_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "log_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->log_id(), output);
  }

  // optional string nick_name = 2;
  if (has_nick_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nick_name().data(), this->nick_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nick_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nick_name(), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string sex = 4;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sex().data(), this->sex().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sex(), output);
  }

  // optional string birth = 5;
  if (has_birth()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->birth().data(), this->birth().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "birth");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->birth(), output);
  }

  // optional string hometown = 6;
  if (has_hometown()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hometown().data(), this->hometown().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hometown");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->hometown(), output);
  }

  // optional string location = 7;
  if (has_location()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->location(), output);
  }

  // optional string blood = 8;
  if (has_blood()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->blood().data(), this->blood().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "blood");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->blood(), output);
  }

  // optional string tel = 9;
  if (has_tel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tel().data(), this->tel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->tel(), output);
  }

  // optional int32 job = 10;
  if (has_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->job(), output);
  }

  // optional string school = 11;
  if (has_school()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->school().data(), this->school().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "school");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->school(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:up_usrinfo_msg)
}

::google::protobuf::uint8* up_usrinfo_msg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:up_usrinfo_msg)
  // required string log_id = 1;
  if (has_log_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->log_id().data(), this->log_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "log_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->log_id(), target);
  }

  // optional string nick_name = 2;
  if (has_nick_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nick_name().data(), this->nick_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "nick_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nick_name(), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string sex = 4;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sex().data(), this->sex().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sex(), target);
  }

  // optional string birth = 5;
  if (has_birth()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->birth().data(), this->birth().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "birth");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->birth(), target);
  }

  // optional string hometown = 6;
  if (has_hometown()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hometown().data(), this->hometown().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hometown");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->hometown(), target);
  }

  // optional string location = 7;
  if (has_location()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->location(), target);
  }

  // optional string blood = 8;
  if (has_blood()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->blood().data(), this->blood().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "blood");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->blood(), target);
  }

  // optional string tel = 9;
  if (has_tel()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tel().data(), this->tel().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "tel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->tel(), target);
  }

  // optional int32 job = 10;
  if (has_job()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->job(), target);
  }

  // optional string school = 11;
  if (has_school()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->school().data(), this->school().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "school");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->school(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:up_usrinfo_msg)
  return target;
}

int up_usrinfo_msg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string log_id = 1;
    if (has_log_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->log_id());
    }

    // optional string nick_name = 2;
    if (has_nick_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nick_name());
    }

    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string sex = 4;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sex());
    }

    // optional string birth = 5;
    if (has_birth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->birth());
    }

    // optional string hometown = 6;
    if (has_hometown()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hometown());
    }

    // optional string location = 7;
    if (has_location()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->location());
    }

    // optional string blood = 8;
    if (has_blood()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->blood());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional string tel = 9;
    if (has_tel()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tel());
    }

    // optional int32 job = 10;
    if (has_job()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->job());
    }

    // optional string school = 11;
    if (has_school()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->school());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void up_usrinfo_msg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const up_usrinfo_msg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const up_usrinfo_msg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void up_usrinfo_msg::MergeFrom(const up_usrinfo_msg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_log_id()) {
      set_log_id(from.log_id());
    }
    if (from.has_nick_name()) {
      set_nick_name(from.nick_name());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_birth()) {
      set_birth(from.birth());
    }
    if (from.has_hometown()) {
      set_hometown(from.hometown());
    }
    if (from.has_location()) {
      set_location(from.location());
    }
    if (from.has_blood()) {
      set_blood(from.blood());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_tel()) {
      set_tel(from.tel());
    }
    if (from.has_job()) {
      set_job(from.job());
    }
    if (from.has_school()) {
      set_school(from.school());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void up_usrinfo_msg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void up_usrinfo_msg::CopyFrom(const up_usrinfo_msg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool up_usrinfo_msg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void up_usrinfo_msg::Swap(up_usrinfo_msg* other) {
  if (other != this) {
    std::swap(log_id_, other->log_id_);
    std::swap(nick_name_, other->nick_name_);
    std::swap(name_, other->name_);
    std::swap(sex_, other->sex_);
    std::swap(birth_, other->birth_);
    std::swap(hometown_, other->hometown_);
    std::swap(location_, other->location_);
    std::swap(blood_, other->blood_);
    std::swap(tel_, other->tel_);
    std::swap(job_, other->job_);
    std::swap(school_, other->school_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata up_usrinfo_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = up_usrinfo_msg_descriptor_;
  metadata.reflection = up_usrinfo_msg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
