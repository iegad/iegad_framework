// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: echo_msg.proto

#ifndef PROTOBUF_echo_5fmsg_2eproto__INCLUDED
#define PROTOBUF_echo_5fmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace iegad {
namespace net {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_echo_5fmsg_2eproto();
void protobuf_AssignDesc_echo_5fmsg_2eproto();
void protobuf_ShutdownFile_echo_5fmsg_2eproto();

class echo_msg;

// ===================================================================

class echo_msg : public ::google::protobuf::Message {
 public:
  echo_msg();
  virtual ~echo_msg();

  echo_msg(const echo_msg& from);

  inline echo_msg& operator=(const echo_msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const echo_msg& default_instance();

  void Swap(echo_msg* other);

  // implements Message ----------------------------------------------

  echo_msg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const echo_msg& from);
  void MergeFrom(const echo_msg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string requ_str = 1;
  inline bool has_requ_str() const;
  inline void clear_requ_str();
  static const int kRequStrFieldNumber = 1;
  inline const ::std::string& requ_str() const;
  inline void set_requ_str(const ::std::string& value);
  inline void set_requ_str(const char* value);
  inline void set_requ_str(const char* value, size_t size);
  inline ::std::string* mutable_requ_str();
  inline ::std::string* release_requ_str();
  inline void set_allocated_requ_str(::std::string* requ_str);

  // required string resp_str = 2;
  inline bool has_resp_str() const;
  inline void clear_resp_str();
  static const int kRespStrFieldNumber = 2;
  inline const ::std::string& resp_str() const;
  inline void set_resp_str(const ::std::string& value);
  inline void set_resp_str(const char* value);
  inline void set_resp_str(const char* value, size_t size);
  inline ::std::string* mutable_resp_str();
  inline ::std::string* release_resp_str();
  inline void set_allocated_resp_str(::std::string* resp_str);

  // @@protoc_insertion_point(class_scope:iegad.net.echo_msg)
 private:
  inline void set_has_requ_str();
  inline void clear_has_requ_str();
  inline void set_has_resp_str();
  inline void clear_has_resp_str();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* requ_str_;
  ::std::string* resp_str_;
  friend void  protobuf_AddDesc_echo_5fmsg_2eproto();
  friend void protobuf_AssignDesc_echo_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_echo_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static echo_msg* default_instance_;
};
// ===================================================================


// ===================================================================

// echo_msg

// required string requ_str = 1;
inline bool echo_msg::has_requ_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void echo_msg::set_has_requ_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void echo_msg::clear_has_requ_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void echo_msg::clear_requ_str() {
  if (requ_str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requ_str_->clear();
  }
  clear_has_requ_str();
}
inline const ::std::string& echo_msg::requ_str() const {
  // @@protoc_insertion_point(field_get:iegad.net.echo_msg.requ_str)
  return *requ_str_;
}
inline void echo_msg::set_requ_str(const ::std::string& value) {
  set_has_requ_str();
  if (requ_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requ_str_ = new ::std::string;
  }
  requ_str_->assign(value);
  // @@protoc_insertion_point(field_set:iegad.net.echo_msg.requ_str)
}
inline void echo_msg::set_requ_str(const char* value) {
  set_has_requ_str();
  if (requ_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requ_str_ = new ::std::string;
  }
  requ_str_->assign(value);
  // @@protoc_insertion_point(field_set_char:iegad.net.echo_msg.requ_str)
}
inline void echo_msg::set_requ_str(const char* value, size_t size) {
  set_has_requ_str();
  if (requ_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requ_str_ = new ::std::string;
  }
  requ_str_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:iegad.net.echo_msg.requ_str)
}
inline ::std::string* echo_msg::mutable_requ_str() {
  set_has_requ_str();
  if (requ_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    requ_str_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:iegad.net.echo_msg.requ_str)
  return requ_str_;
}
inline ::std::string* echo_msg::release_requ_str() {
  clear_has_requ_str();
  if (requ_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = requ_str_;
    requ_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void echo_msg::set_allocated_requ_str(::std::string* requ_str) {
  if (requ_str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete requ_str_;
  }
  if (requ_str) {
    set_has_requ_str();
    requ_str_ = requ_str;
  } else {
    clear_has_requ_str();
    requ_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:iegad.net.echo_msg.requ_str)
}

// required string resp_str = 2;
inline bool echo_msg::has_resp_str() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void echo_msg::set_has_resp_str() {
  _has_bits_[0] |= 0x00000002u;
}
inline void echo_msg::clear_has_resp_str() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void echo_msg::clear_resp_str() {
  if (resp_str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resp_str_->clear();
  }
  clear_has_resp_str();
}
inline const ::std::string& echo_msg::resp_str() const {
  // @@protoc_insertion_point(field_get:iegad.net.echo_msg.resp_str)
  return *resp_str_;
}
inline void echo_msg::set_resp_str(const ::std::string& value) {
  set_has_resp_str();
  if (resp_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resp_str_ = new ::std::string;
  }
  resp_str_->assign(value);
  // @@protoc_insertion_point(field_set:iegad.net.echo_msg.resp_str)
}
inline void echo_msg::set_resp_str(const char* value) {
  set_has_resp_str();
  if (resp_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resp_str_ = new ::std::string;
  }
  resp_str_->assign(value);
  // @@protoc_insertion_point(field_set_char:iegad.net.echo_msg.resp_str)
}
inline void echo_msg::set_resp_str(const char* value, size_t size) {
  set_has_resp_str();
  if (resp_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resp_str_ = new ::std::string;
  }
  resp_str_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:iegad.net.echo_msg.resp_str)
}
inline ::std::string* echo_msg::mutable_resp_str() {
  set_has_resp_str();
  if (resp_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    resp_str_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:iegad.net.echo_msg.resp_str)
  return resp_str_;
}
inline ::std::string* echo_msg::release_resp_str() {
  clear_has_resp_str();
  if (resp_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = resp_str_;
    resp_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void echo_msg::set_allocated_resp_str(::std::string* resp_str) {
  if (resp_str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete resp_str_;
  }
  if (resp_str) {
    set_has_resp_str();
    resp_str_ = resp_str;
  } else {
    clear_has_resp_str();
    resp_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:iegad.net.echo_msg.resp_str)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace net
}  // namespace iegad

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_echo_5fmsg_2eproto__INCLUDED
