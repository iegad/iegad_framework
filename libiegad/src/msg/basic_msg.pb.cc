// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: basic_msg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "basic_msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace iegad {
namespace msg {

namespace {

const ::google::protobuf::Descriptor* basic_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  basic_msg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_basic_5fmsg_2eproto() {
  protobuf_AddDesc_basic_5fmsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "basic_msg.proto");
  GOOGLE_CHECK(file != NULL);
  basic_msg_descriptor_ = file->message_type(0);
  static const int basic_msg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(basic_msg, msg_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(basic_msg, msg_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(basic_msg, msg_bdstr_),
  };
  basic_msg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      basic_msg_descriptor_,
      basic_msg::default_instance_,
      basic_msg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(basic_msg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(basic_msg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(basic_msg));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_basic_5fmsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    basic_msg_descriptor_, &basic_msg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_basic_5fmsg_2eproto() {
  delete basic_msg::default_instance_;
  delete basic_msg_reflection_;
}

void protobuf_AddDesc_basic_5fmsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017basic_msg.proto\022\tiegad.msg\"B\n\tbasic_ms"
    "g\022\020\n\010msg_type\030\001 \002(\005\022\020\n\010msg_flag\030\002 \002(\005\022\021\n"
    "\tmsg_bdstr\030\003 \002(\014", 96);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "basic_msg.proto", &protobuf_RegisterTypes);
  basic_msg::default_instance_ = new basic_msg();
  basic_msg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_basic_5fmsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_basic_5fmsg_2eproto {
  StaticDescriptorInitializer_basic_5fmsg_2eproto() {
    protobuf_AddDesc_basic_5fmsg_2eproto();
  }
} static_descriptor_initializer_basic_5fmsg_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int basic_msg::kMsgTypeFieldNumber;
const int basic_msg::kMsgFlagFieldNumber;
const int basic_msg::kMsgBdstrFieldNumber;
#endif  // !_MSC_VER

basic_msg::basic_msg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:iegad.msg.basic_msg)
}

void basic_msg::InitAsDefaultInstance() {
}

basic_msg::basic_msg(const basic_msg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:iegad.msg.basic_msg)
}

void basic_msg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msg_type_ = 0;
  msg_flag_ = 0;
  msg_bdstr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

basic_msg::~basic_msg() {
  // @@protoc_insertion_point(destructor:iegad.msg.basic_msg)
  SharedDtor();
}

void basic_msg::SharedDtor() {
  if (msg_bdstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_bdstr_;
  }
  if (this != default_instance_) {
  }
}

void basic_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* basic_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return basic_msg_descriptor_;
}

const basic_msg& basic_msg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_basic_5fmsg_2eproto();
  return *default_instance_;
}

basic_msg* basic_msg::default_instance_ = NULL;

basic_msg* basic_msg::New() const {
  return new basic_msg;
}

void basic_msg::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<basic_msg*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(msg_type_, msg_flag_);
    if (has_msg_bdstr()) {
      if (msg_bdstr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        msg_bdstr_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool basic_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:iegad.msg.basic_msg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 msg_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_type_)));
          set_has_msg_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_msg_flag;
        break;
      }

      // required int32 msg_flag = 2;
      case 2: {
        if (tag == 16) {
         parse_msg_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_flag_)));
          set_has_msg_flag();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_msg_bdstr;
        break;
      }

      // required bytes msg_bdstr = 3;
      case 3: {
        if (tag == 26) {
         parse_msg_bdstr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg_bdstr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:iegad.msg.basic_msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:iegad.msg.basic_msg)
  return false;
#undef DO_
}

void basic_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:iegad.msg.basic_msg)
  // required int32 msg_type = 1;
  if (has_msg_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msg_type(), output);
  }

  // required int32 msg_flag = 2;
  if (has_msg_flag()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->msg_flag(), output);
  }

  // required bytes msg_bdstr = 3;
  if (has_msg_bdstr()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->msg_bdstr(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:iegad.msg.basic_msg)
}

::google::protobuf::uint8* basic_msg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:iegad.msg.basic_msg)
  // required int32 msg_type = 1;
  if (has_msg_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msg_type(), target);
  }

  // required int32 msg_flag = 2;
  if (has_msg_flag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->msg_flag(), target);
  }

  // required bytes msg_bdstr = 3;
  if (has_msg_bdstr()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->msg_bdstr(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:iegad.msg.basic_msg)
  return target;
}

int basic_msg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 msg_type = 1;
    if (has_msg_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msg_type());
    }

    // required int32 msg_flag = 2;
    if (has_msg_flag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msg_flag());
    }

    // required bytes msg_bdstr = 3;
    if (has_msg_bdstr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->msg_bdstr());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void basic_msg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const basic_msg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const basic_msg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void basic_msg::MergeFrom(const basic_msg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msg_type()) {
      set_msg_type(from.msg_type());
    }
    if (from.has_msg_flag()) {
      set_msg_flag(from.msg_flag());
    }
    if (from.has_msg_bdstr()) {
      set_msg_bdstr(from.msg_bdstr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void basic_msg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void basic_msg::CopyFrom(const basic_msg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool basic_msg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void basic_msg::Swap(basic_msg* other) {
  if (other != this) {
    std::swap(msg_type_, other->msg_type_);
    std::swap(msg_flag_, other->msg_flag_);
    std::swap(msg_bdstr_, other->msg_bdstr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata basic_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = basic_msg_descriptor_;
  metadata.reflection = basic_msg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msg
}  // namespace iegad

// @@protoc_insertion_point(global_scope)
